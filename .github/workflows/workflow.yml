name: Workflow Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup and Install Dependencies üõ†Ô∏è
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-modules-yarn-

      - name: Yarn install
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

  build:
    name: Build üì¶
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # fetch-depth gives the complete git history which is needed for nx.
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-yarn-${{ hashFiles('yarn.lock') }}

      - name: Build
        run: yarn nx run-many --target=build --all

  tests:
    name: Tests üß™
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # fetch-depth gives the complete git history which is needed for nx.
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-yarn-${{ hashFiles('yarn.lock') }}

      - name: Run Tests
        run: yarn nx run-many --target=test --all

  # e2e-tests:
  #   name: E2E Tests üö¶
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #       with:
  #         # fetch-depth gives the complete git history which is needed for nx.
  #         fetch-depth: 0
  #         ref: ${{ github.event.pull_request.head.sha }}

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Restore Cache node_modules and Cypress binary
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           ~/.cache/Cypress
  #         key: ${{ runner.os }}-node-modules-and-cypress-${{ hashFiles('yarn.lock') }}

  #     - name: Install Dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: yarn install --frozen-lockfile

  #     - name: Verify Cypress Binary
  #       run: npx cypress verify

  #     - name: Start Server
  #       run: npx nx run backend:serve &
  #       shell: bash

  #     - name: Wait for Server
  #       run: |
  #         while ! nc -z localhost 3000; do sleep 1; done

  #     - name: Run E2E Tests
  #       run: yarn nx run-many --target=e2e --all

  #     - name: Shutdown Server
  #       if: always() # Ensures this step runs even if the previous step fails
  #       run: kill $(jobs -p) || true
  #       shell: bash

  lint:
    name: Lint üé®
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # fetch-depth gives the complete git history which is needed for nx.
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Restore node_modules from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-yarn-${{ hashFiles('yarn.lock') }}

      - name: Lint
        run: yarn nx run-many --target=lint --all
